"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
# config/settings.py
import os
from pathlib import Path
from dotenv import load_dotenv # <-- Import pour charger le fichier .env

# Charge les variables d'environnement du fichier .env
load_dotenv() 


from django.contrib.messages import constants as messages

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}


# ...

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tinir-yxm3g_ktx_-v(7+96p42#(wreve0#wd%ior(%+-irm+k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']



#Cette partie est dediee a jl'ajout des  liens ngrok pour la recurite des formulaire
CSRF_TRUSTED_ORIGINS = [
    'https://a40b641da22b.ngrok-free.app',
    'https://04db87f69fa7.ngrok-free.app'
]
# Redirection quand @login_required bloque l'accès
#LOGIN_URL = '/'  # par défaut redirige vers la page principale

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',  # Activation


    # Nos apps
    'boissons',
    'stocks',
    'ventes',
    'avances',
    'depenses',
    'personnel',
    'presences',
    'salaires',
    'statistiques',
    'comptabilite',
    'users',
    'commandes',
    'produits',



]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # <--- ajoute ce dossier global
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'ventes.context_processors.session_status', # <--- AJOUTEZ CETTE LIGNE

            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# URL vers laquelle Django redirige l'utilisateur après une connexion réussie
LOGIN_REDIRECT_URL = 'personnel:home_employe' 


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

  #DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# config/settings.py

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        # Lecture des variables d'environnement
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': os.environ.get('DB_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

#LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field


# # Chemin pour les fichiers statiques en développement
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Chemin pour collecter les fichiers statiques en production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# # Chemin de base du projet
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# config/settings.py

# Importez la fonction config de decouple en haut du fichier
from decouple import config 
# ... (votre code d'imports existant)

# ... (Votre définition de SECRET_KEY doit aussi utiliser config)
# SECRET_KEY = config('SECRET_KEY') 

# ... (le reste de vos settings)

# --- 1. Configuration du Backend d'Envoi (SMTP) ---
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# --- 2. Hôte et Port (Lecture depuis .env) ---
# Utilisez config() pour lire les valeurs du fichier .env
EMAIL_HOST = config('EMAIL_HOST') 

# 'cast=int' convertit la chaîne '587' en nombre entier
EMAIL_PORT = config('EMAIL_PORT', cast=int) 

# 'cast=bool' convertit la chaîne 'True' en booléen True
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool) 
# EMAIL_USE_SSL est généralement laissé à False lorsque EMAIL_USE_TLS est à True avec le port 587

# --- 3. Identifiants de Connexion (Lecture depuis .env) ---
EMAIL_HOST_USER = config('EMAIL_HOST_USER') 
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD') 

# --- 4. Adresses d'Expédition par Défaut ---
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER 
SERVER_EMAIL = EMAIL_HOST_USER

# --- 5. Configuration Nécessaire pour les Liens (Réinitialisation) ---
SITE_ID = 1